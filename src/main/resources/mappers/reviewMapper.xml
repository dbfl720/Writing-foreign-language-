<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 
 <mapper namespace="com.language.review.dao.ReviewMapper">
 
 	<insert id="insertReview" parameterType="map">
 		INSERT INTO `review_writing`
 		(
 			`userId`
 			,`reviewCategoryId`
 			,`languageCategoryId`
 			,`title`
 			,`rating`
 			,`content`
 			,`ImagePath`
 			,`createdAt`
 			,`updatedAt`
 		)
 		VALUES
 		(
 			#{userId}
 			,#{reviewCategoryId}
 			,#{languageCategoryId}
 			,#{title}
 			,#{rating}
 			,#{content}
 			,#{ImagePath}
 			,NOW()
 			,NOW()		
 		)
 	
 	</insert>
 	
 	
 	
 	<select id="selectReviewListByLanguage"  resultType="com.language.review.model.Review">
 		SELECT
 			`id`
 			,`userId`
 			,`reviewCategoryId`
 			,`languageCategoryId`
 			,`title`
 			,`rating`
 			,`content`
 			,`ImagePath`
 			,`createdAt`
 			,`updatedAt`
 		FROM
 			`review_writing`
		WHERE
			`languageCategoryId` = #{languageCategoryId}
 			<if test="direction == null">
			ORDER BY `id` DESC		
			</if>
			<if test="direction == 'next'">
			<![CDATA[
			AND `id` < #{standardId}
			]]>
			ORDER BY `id` DESC
			</if>
			<if test="direction == 'prev'">
			<![CDATA[
			AND `id` > #{standardId}
			]]>
			</if>
 			LIMIT ${limit} 
 	</select>
 	
 	
 	
 	
 	
 	<select id="selectReviewListByLanguageSort" parameterType="map" resultType="int">
		SELECT 
			`id`
		FROM
			`review_writing`
		WHERE
			`languageCategoryId` = #{languageCategoryId}
		ORDER BY `id` ${sort}
		LIMIT 1
	</select>
 	
 
 
 
 
 
 	<select id="selectReviewList" resultType="com.language.review.model.Review">
 		SELECT
 			`id`
 			,`userId`
 			,`reviewCategoryId`
 			,`languageCategoryId`
 			,`title`
 			,`rating`
 			,`content`
 			,`ImagePath`
 			,`createdAt`
 			,`updatedAt`
 		FROM
 			`review_writing`
 	
 	</select>
 	
 	
 	<select id="selectReviewCountByReviewIdUserId" parameterType="map" resultType="int">
 		SELECT
 			COUNT(*)
		FROM
			`review_writing`
		WHERE
			<if test="userId != null">
			`userId` = #{userId}
			</if>
		ORDER BY `id` DESC
 	
 	</select>
 	
 	
 	
 	<select id="selectReviewCountList" resultType="com.language.review.model.Review">
		SELECT
 			userId, count(userId)
 		FROM
 			`review_writing` group by 1   <!-- group by 1 : 1번째 컬럼 -->
		ORDER by 2 DESC   <!-- ORDER BY 2 : 컬럼 순서   -->
 		Limit 18
 	</select>
 	
 	
 	<select id="selectReview"  parameterType="int" resultType="com.language.review.model.Review">
 		SELECT
 			`id`
 			,`userId`
 			,`reviewCategoryId`
 			,`languageCategoryId`
 			,`title`
 			,`rating`
 			,`content`
 			,`ImagePath`
 			,`createdAt`
 			,`updatedAt`
 		FROM
 			`review_writing`
		WHERE
			`id` = #{reviewId}
 	</select>
 	
 	
 	
 	<update id="updateReviewByUserId" parameterType="map">
 		UPDATE 	`review_writing`
 		SET
 			`reviewCategoryId` = #{reviewCategoryId}
 			,`languageCategoryId` = #{languageCategoryId}
 			,`title` = #{title}
 			,`rating` = #{rating}
 			,`content` = #{content}
 			,`ImagePath` = #{ImagePath}
 			,`updatedAt` = NOW()
		WHERE
			`userId` = #{userId}
 	</update>

 
 </mapper>